/**
 * Copyright (c) KMG. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 */
import java.util.regex.Matcher

plugins.withId('application') {
    configurations.archives.with {
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distZip) }
        artifacts.remove artifacts.find { it.hasProperty('archiveTask') && it.archiveTask.is(distTar) }
    }

    task pathingJar(type: Jar) {
        archiveAppendix = 'pathing'

        // Delay configuring the manifest to avoid resolving the configuration
        doFirst {
            manifest {
                attributes("Class-Path":
                        configurations.runtimeClasspath.collect { it.name }.join(' ')+" "+jar.archiveName
                )
            }
        }
    }

    applicationDistribution.from(pathingJar) {
        into "lib"
    }

    startScripts {
        doLast {
            unixScript.text = unixScript.text.replace('SBK_APP_HOME', '\$APP_HOME')
            /*
            // No pathing jar for Unix based builds.
            // in gradle 6+ jar.archiveFileName is not getting extracted properly, so use deprecated archiveName.
            // Replace the classpath on windows with the pathing JAR and the main archive
            unixScript.text = unixScript.text.replaceAll('CLASSPATH=.*', Matcher.quoteReplacement(
                    "CLASSPATH=\$APP_HOME/lib/${pathingJar.archiveName}:\$APP_HOME/lib/${jar.archiveName}"))
             */

            windowsScript.text = windowsScript.text.replace('SBK_APP_HOME', '%~dp0..')
            windowsScript.text = windowsScript.text.replaceAll('set CLASSPATH=.*', Matcher.quoteReplacement(
                    "set CLASSPATH=%APP_HOME%\\lib\\${pathingJar.archiveName};%APP_HOME%\\lib\\${jar.archiveName}"))
        }
    }
}